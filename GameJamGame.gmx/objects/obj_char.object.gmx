<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_eagleman_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///init variables
grav = .35;
hsp = 0; //horizontal speed
vsp = 0; //vertical speed

//constants (ish)
jumpspeed = 7; //jump speed
movespeed = 4;

move = 0;

grav_enabled = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Get player's input
key_right = keyboard_check(ord('D'));
key_left = -keyboard_check(ord('A'));
key_jump = keyboard_check_pressed(vk_space);

//React to inputs
move = key_left + key_right;
hsp = move * movespeed;
if (grav_enabled) {
    if (vsp &lt; 30) {
        vsp += grav;
    }
} else {
    if (vsp&lt;0) {
         vsp = 0;
    } else {
        vsp += grav;
    }
}
//if (vsp &lt; 30) vsp += grav; //positive = down, negative = up

if (place_meeting(x, y + 1, obj_floor )) {
    vsp = key_jump * -jumpspeed;
}

if (place_meeting(x, y + sprite_height/2, oj_movingup_down_floor)) {
    grav_enabled = false;
} else {
    grav_enabled = true;
}

//horizontal collision check
if (place_meeting(x + hsp, y, obj_floor)) {
    while(!place_meeting(x + sign(hsp), y, obj_floor)) {
        x += sign(hsp);
    }
    hsp = 0;
}

//vertical collision check
if (place_meeting(x, y + vsp, obj_floor)) {
    while(!place_meeting(x, y + sign(vsp), obj_floor)) {
        y += sign(vsp);
    }
    vsp = 0;
}

x += hsp;
y += vsp;

if position_meeting(x-sprite_xoffset+sprite_width/2, y-sprite_yoffset+sprite_height + 1, oj_movingup_down_floor){
objID = instance_position(x-sprite_xoffset+sprite_width/2, y-sprite_yoffset+sprite_height + 1,oj_movingup_down_floor)
vspeed = objID.vspeed;
move_outside_solid(90,sprite_height);
}

if(move!=0) image_xscale = -move;

if (place_meeting(x,y+1,obj_floor)) {
    if(move!=0) sprite_index = spr_eagleman_run; else sprite_index = spr_eagleman_idle;
} else {
    if(vsp&lt;0) sprite_index = spr_eagleman_jump; else sprite_index = spr_eagleman_fall;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_bulidingrubble">
      <action>
        <libid>1</libid>
        <id>211</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>snd_death</sound>
          </argument>
          <argument>
            <kind>3</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>224</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_another_room</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>11</kind>
            <room>rm_deathScreen</room>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>212</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_end_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>snd_air_realm_fixed</sound>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///do door thing
/*
if (place_meeting(x, y, obj_door)) {
    if room_next(room) != -1 {
        room_goto(room_next(room));
    }
}
*/

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
